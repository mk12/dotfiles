# C-a is easier to reach
set -g prefix C-a
bind C-a send-keys C-a

# Execute reattach-to-user-namespace with bash
set -g default-shell /bin/bash
set -g default-command "reattach-to-user-namespace -l $SHELL"

# Plugins
set -g @plugin "mk12/tmux-resurrect"
set -g @plugin "tmux-plugins/tmux-continuum"
set -g @plugin "tmux-plugins/tmux-sensible"
set -g @plugin "tmux-plugins/tpm"

# Plugin options
set -g @continuum-save-interval "10"
set -g @resurrect-save-command-strategy "pgrep"
set -g @resurrect-strategy-nvim "session"

# Colors
set -g status-bg "colour0"
set -g status-fg "colour12"
setw -g window-status-current-fg "colour0"
setw -g window-status-current-bg "colour12"
set -g pane-border-fg "colour10"
set -g pane-border-bg "colour10"
set -g pane-active-border-fg "colour14"
set -g pane-active-border-bg "colour14"

# General options
set -g mouse on
set -g renumber-windows on
set -g allow-rename off

# Reload config with C-a R
bind R source-file ~/.tmux.conf \; display "Config reloaded!"

# Clear terminal with C-a C-k
bind C-k send-keys C-l

# Vi copy mode
setw -g mode-keys vi
bind -t vi-copy J halfpage-down
bind -t vi-copy K halfpage-up
bind -t vi-copy v begin-selection
bind -t vi-copy C-v rectangle-toggle
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
unbind -t vi-copy Enter
bind -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -t vi-copy WheelUpPane scroll-up
bind-key -t vi-copy WheelDownPane scroll-down

# Split panes using C-a / and C-a -
unbind '"'
unbind %
bind / split-window -h
bind - split-window -v

# Move pane to a different window
bind j command-prompt -p "Send pane to:" "join-pane -t '%%'"

# Reorder windows
bind p swap-window -t -1
bind n swap-window -t +1

# Smart pane switching with awareness of vim splits
# https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" \
	| grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Status line config generated by tmuxline.vim
set -g status-bg "colour0"
set -g message-command-fg "colour7"
set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
set -g message-bg "colour11"
set -g status-right-length "100"
set -g status-right-attr "none"
set -g message-fg "colour7"
set -g message-command-bg "colour11"
set -g status-attr "none"
set -g status-left-attr "none"
setw -g window-status-fg "colour10"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour0"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour14"
setw -g window-status-separator ""
setw -g window-status-bg "colour0"
setw -g mode-fg "colour8"
setw -g mode-bg "colour10"
set -g status-left "#[fg=colour15,bg=colour4,bold] #S #[fg=colour4,bg=colour0,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour10,bg=colour0,nobold,nounderscore,noitalics]#[fg=colour7,bg=colour10] %I:%M %p  %d-%b-%Y "
setw -g window-status-format "#[fg=colour10,bg=colour0] #I #[fg=colour10,bg=colour0] #W "
setw -g window-status-current-format "#[fg=colour0,bg=colour11,nobold,nounderscore,noitalics]#[fg=colour7,bg=colour11] #I #[fg=colour7,bg=colour11] #W #[fg=colour11,bg=colour0,nobold,nounderscore,noitalics]"

# Toggle light/dark theme
bind b if-shell "$is_vim" "send-keys Space t b" "run-shell darklight.sh"
if-shell "command -v darklight.sh" "run-shell 'darklight.sh -t'"

# Initialize plugin manager
run "~/.tmux/plugins/tpm/tpm"
